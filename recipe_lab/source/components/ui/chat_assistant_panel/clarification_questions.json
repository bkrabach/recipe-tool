[
  "Can you provide the exact JSON schema for requests sent to the LLM API (field names, required parameters) and for expected responses (e.g., which property contains the generated text, metadata, timestamps, etc.)?",
  "How should the LLM endpoint URL and API key be supplied at runtime? Specifically, should the API key go in an Authorization header, a custom header, a query parameter, or the request body, and what exact names/formats are required?",
  "For Drawflow integration, what is the precise structure of the configuration object passed to editor.addNode('llm_generate', config) and editor.updateNode(nodeId, config)? Which fields (e.g., position, data payload, inputs/outputs) are mandatory?",
  "Under what exact conditions should the component add a new llm_generate node versus updating an existing node? For example, is it based on the first message in a session, an explicit user action, or some other context?",
  "What minimal HTML structure or container markup does the component assume? Should #sidebar contain specific child elements or ARIA roles/attributes before initialization?",
  "Do you have a naming convention or prefix rules for scoped CSS classes in this component (e.g., BEM-style prefixes), or any existing style guidelines to follow?",
  "What is the desired behavior for debouncing or disabling the send button? Should it remain disabled until the LLM response arrives, or only be disabled for a fixed debounce window? If debounced, what interval should be used?",
  "Which logging API or library should the component use? Should logs be emitted via console.debug/info, or integrated with a centralized logging service, and are there any context fields or correlation IDs to include?",
  "Is in-memory chat history sufficient, or do you expect persistence across page reloads (e.g., via localStorage or sessionStorage)?",
  "What timestamp format should be displayed for user and assistant messages (e.g., 24-hour HH:MM, 12-hour with AM/PM, ISO string), and should timestamps appear on every message or be grouped?",
  "Should the chat panel auto-scroll to the latest message when a new one arrives? Are there scenarios where auto-scroll should be suppressed (e.g., if the user has scrolled up)?",
  "Do static UI labels and error messages (e.g., \"Send\", \"Failed to fetch LLM response\") need to be localizable or configurable? If so, how should clients override or supply custom strings?",
  "Should pressing Enter in the text input send the message, and should a modifier (e.g., Shift+Enter) insert a newline? Are there any additional keyboard shortcuts or accessibility (ARIA) requirements?",
  "What public API surface should the component expose beyond initialization (e.g., clearHistory(), teardown(), event callbacks for new messages)? Please specify method names, arguments, and return types.",
  "Are there any performance or memory constraints on the chat history (e.g., maximum number of messages to retain or automatic pruning)?",
  "How should inline error messages be styled or presented in the UI? Should we display a retry button or other interactive elements when an error occurs?",
  "Do you want to stub out an interface or callback for streaming LLM responses now, even if streaming isnâ€™t implemented in the initial version?"
]