[
  {
    "name": "Component Diagram",
    "description": "Shows the Toolbox Shell UI component and its dependencies.",
    "mermaid_code": "```mermaid\nflowchart LR\n  subgraph ToolboxShellUI\n    TB[ToolboxShell]\n    Palette[Palette Module]\n    ImportCtrl[Import Control]\n    ExportCtrl[Export Control]\n  end\n  Drawflow[Drawflow Editor]\n  NodesReg[Nodes Registry]\n  Modal[Modal Component]\n  Toast[Toast Component]\n\n  TB --> Palette\n  TB --> ImportCtrl\n  TB --> ExportCtrl\n  Palette --> NodesReg\n  TB --> Drawflow\n  TB --> Modal\n  TB --> Toast\n```"
  },
  {
    "name": "Class Diagram",
    "description": "Highlights the main class, its methods, and collaborators.",
    "mermaid_code": "```mermaid\nclassDiagram\n  class ToolboxShell {\n    +init(containerEl, editor, options)\n    +teardown()\n    -renderPalette()\n    -renderControls()\n    -bindEvents()\n    -handleClick(type)\n    -handleDrag()\n    -handleImport(file)\n    -handleExport()\n  }\n  class DrawflowEditor\n  class FileReader\n  class Modal\n  class Toast\n\n  ToolboxShell --> DrawflowEditor\n  ToolboxShell --> FileReader\n  ToolboxShell --> Modal\n  ToolboxShell --> Toast\n```"
  },
  {
    "name": "Sequence Diagram",
    "description": "Walks through init, add‐node, import, and export interactions.",
    "mermaid_code": "```mermaid\nsequenceDiagram\n  participant U as User\n  participant TS as ToolboxShell\n  participant DE as DrawflowEditor\n  participant FR as FileReader\n  participant JM as JSON\n  participant M as Modal\n  participant T as Toast\n\n  U->>TS: initToolboxShell(container, editor, options)\n  TS->>DE: getNodeData for each type\n  TS->>DOM: create palette and controls\n  TS-->>U: ready\n\n  U->>TS: click button(type)\n  TS->>DE: getNodeData(type)\n  TS->>DE: addNode(type, data, offsetX, offsetY)\n\n  U->>TS: import file\n  TS->>FR: readAsText(file)\n  FR-->>TS: onload(text)\n  TS->>JM: parse(text)\n  alt parse error\n    TS->>T: show error\n  else\n    TS->>DE: import(json)\n    TS->>T: show success\n  end\n\n  U->>TS: export\n  TS->>DE: export()\n  TS->>JM: stringify(json)\n  TS->>DOM: trigger download\n  TS->>M: show json modal\n  TS->>T: show success\n```"
  },
  {
    "name": "Activity Diagram",
    "description": "Describes the import-flow logic from file pick to final toast.",
    "mermaid_code": "```mermaid\nflowchart TD\n  Start --> OpenPicker[Open File Picker]\n  OpenPicker --> CheckType{File type json}\n  CheckType -->|no| AlertError[Show Alert Error]\n  AlertError --> End\n  CheckType -->|yes| ReadFile[Read File]\n  ReadFile --> ParseJSON[Parse JSON]\n  ParseJSON -->|error| ToastError[Show Toast Error]\n  ToastError --> End\n  ParseJSON -->|success| ConfirmImport[Confirm Import]\n  ConfirmImport --> DoImport[editor.import]\n  DoImport --> ToastSuccess[Show Toast Success]\n  ToastSuccess --> End\n```"
  },
  {
    "name": "State Diagram",
    "description": "Models the import control states and transitions.",
    "mermaid_code": "```mermaid\nstateDiagram\n  [*] --> Idle\n  Idle --> FileSelected: fileChosen\n  FileSelected --> Reading: startRead\n  Reading --> Parsed: onLoad\n  Reading --> Error: onError\n  Parsed --> Confirmed: userConfirm\n  Confirmed --> Idle: reset\n  Error --> Idle: reset\n```"
  }
]