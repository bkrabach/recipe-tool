[
  "How should the node palette be laid out and styled — do we have CSS class naming conventions (e.g. BEM), iconography, grouping, or theming guidelines to follow?",
  "Where and how should the module retrieve the \"default data\" object for each registered node type? Does the Drawflow registration modules expose default payloads, or do we need a separate mapping?",
  "When adding a node via click or drag‐and‐drop, what coordinates should be passed to editor.addNode? Should nodes appear at a fixed offset, at the cursor drop location, or some other positioning logic?",
  "Should the Import control restrict selectable file types (e.g., only .json), and do we need to support drag‐and‐drop file importing in addition to the file picker dialog?",
  "For the Export control, do we need to automatically trigger a file download with a generated filename (e.g., flow-export.json), or is displaying the JSON in a modal/textarea with a manual copy/download link sufficient?",
  "Is there an existing modal or dialog component in the codebase that we should reuse for displaying import errors and export JSON, or do we need to implement a minimal custom modal as part of this module?",
  "How should user‐visible feedback (success and error messages) be displayed? For example, should we use native alert(), inline error text, toast notifications, or another pattern?",
  "Do we integrate logging via console.debug/info directly, or is there an existing logging utility or logger instance that should be passed into initToolboxShell?",
  "Are there any accessibility (a11y) requirements for the palette and controls (keyboard navigation, ARIA labels, focus management)?",
  "Should initToolboxShell accept additional optional configuration parameters (such as custom labels, CSS class prefixes, or import/export options), or is the containerEl and editor instance sufficient?",
  "What version(s) of Drawflow does this module need to support, and what API or method should we call to retrieve the list of registered node types?",
  "Do we need to handle teardown of the toolbox (removing event listeners and DOM elements) if the Drawflow editor is destroyed or reinitialized, and if so, how should that API be exposed?"
]