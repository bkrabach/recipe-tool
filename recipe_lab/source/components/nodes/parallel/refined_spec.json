{
  "component_title": "nodes.parallel (Parallel Node)",
  "purpose_statement": "Provides a Drawflow UI node for the “parallel” recipe step in the recipe builder. It lets end users specify and launch multiple sub-steps concurrently, with optional limits on concurrent execution and configurable launch delays.",
  "core_requirements": [
    "Export a function `registerParallel(editor: DrawflowInstance): void` as the public API. Documents should show how to import and call it (e.g., `import { registerParallel } from 'src/nodes/parallel.js'; registerParallel(editor);`).",
    "Within `registerParallel`, invoke `editor.registerNode('parallel', {...})` to register the node type.",
    "Embed an HTML template string defining `<textarea df-substeps>`, `<input type='number' df-max_concurrency>` and `<input type='number' step='0.1' df-delay>` fields.",
    "In the `onCreate(node)` handler, initialize `node.data.config = { substeps: [], max_concurrency: 0, delay: 0.0 }` and a hidden backup store (e.g., `node.data._previousValidSubsteps = '[]'`).",
    "Bind each field via its `df-` attribute to the matching `node.data.config` property.",
    "On user input for `max_concurrency`, parse the value as an integer ≥ 0 (treat blank or non‐numeric as 0), update config and log a debug message.",
    "On user input for `delay`, parse the value as a floating-point number ≥ 0.0, update config and log a debug message.",
    "On blur/change of the `substeps` textarea, attempt `JSON.parse`. If valid, update `node.data.config.substeps` and backup string, and log debug; if invalid, show an alert, log a warning, revert the textarea to the last valid JSON string, and leave config unchanged.",
    "Ensure that dragging a new Parallel node onto the canvas yields a valid default config object.",
    "Maintain consistency with other `/nodes/*.js` modules: plain ES module, no frameworks, vanilla JavaScript, similar `registerX` export and `onCreate` pattern."
  ],
  "implementation_considerations": [
    "Use a self-contained ES module (`src/nodes/parallel.js`) exporting `registerParallel` and embedding the node’s HTML as a template string.",
    "Use Drawflow’s `df-*` attribute convention to bind DOM fields to `node.data.config` properties automatically.",
    "Initialize and store a private backup copy of the last valid substeps JSON (`node.data._previousValidSubsteps`) to support revert on parse errors.",
    "Parse and validate `substeps` JSON on blur/change; catch `SyntaxError` and other exceptions to prevent invalid state.",
    "Enforce that `max_concurrency` is a non-negative integer (0 means unlimited) and that `delay` is a non-negative float (units: seconds). Provide inline validation messages or enforce HTML `min=0` constraints.",
    "Log at debug level whenever config fields are parsed or updated, and at info level when the node is created or fully updated by the user.",
    "Keep the HTML minimal; rely on Drawflow’s default CSS for sizing and theming. Do not introduce custom styling in this module.",
    "Provide clear comments so future developers can extend the form (add new `df-*` fields and binding logic in `onCreate`)."
  ],
  "component_dependencies": {
    "internal_components": [
      "DrawflowInstance – the Drawflow editor instance passed into `registerParallel`"
    ],
    "external_libraries": [],
    "configuration_dependencies": []
  },
  "output_files": [
    {
      "path": "src/nodes/parallel.js",
      "description": "ES module exporting `registerParallel(editor)`, registering the 'parallel' Drawflow node, rendering the HTML form, and implementing data binding and JSON validation."
    },
    {
      "path": "tests/nodes/parallel.test.js",
      "description": "Unit tests covering JSON parsing (valid and invalid substeps), config binding for `max_concurrency` and `delay`, and revert logic on JSON errors."
    }
  ],
  "logging_requirements": {
    "debug": [
      "Parsed substeps JSON: {{value}}",
      "Updated max_concurrency: {{value}}",
      "Updated delay: {{value}}"
    ],
    "info": [
      "Parallel node created with default config",
      "Parallel node configuration updated"
    ]
  },
  "error_handling": [
    {
      "error_type": "JSONParseError",
      "error_message": "Invalid JSON in Substeps field",
      "recovery_action": "Show an alert to the user, log a warning, revert the textarea to the last valid JSON, and leave `node.data.config.substeps` unchanged"
    }
  ],
  "dependency_integration_considerations": []
}