{
  "component_title": "Canvas Core",
  "purpose_statement": "The Canvas Core component initializes and starts a Drawflow canvas within a given container element. It provides a simple ES module exporting a single function to encapsulate Drawflow setup, ensuring the editor is ready for node operations without any UI concerns beyond the canvas itself.",
  "core_requirements": [
    "Import the Drawflow library from the 'drawflow' package",
    "Expose a function createCanvas(containerEl: HTMLElement)",
    "Instantiate a new Drawflow editor on the provided container element",
    "Invoke editor.start() to initialize the canvas",
    "Return the Drawflow editor instance to the caller"
  ],
  "implementation_considerations": [
    "Implement as a pure ES module with no global state",
    "Validate that the passed containerEl is a valid HTMLElement before initializing",
    "Minimize side effects: only interact with the provided container element",
    "Keep the module focused on initialization; delegate any further configuration to callers",
    "Handle import and initialization errors gracefully and propagate meaningful messages"
  ],
  "component_dependencies": {
    "internal_components": [],
    "external_libraries": [
      "drawflow"
    ],
    "configuration_dependencies": []
  },
  "output_files": [
    {
      "path": "src/core/canvas.js",
      "description": "Main ES module implementing createCanvas to initialize and start a Drawflow canvas."
    }
  ],
  "logging_requirements": {
    "debug": [
      "Initializing Drawflow canvas on provided container",
      "Imported Drawflow library successfully",
      "Starting Drawflow editor instance",
      "Drawflow editor started successfully"
    ],
    "info": [
      "Canvas Core: createCanvas completed and editor instance returned"
    ]
  },
  "error_handling": [
    {
      "error_type": "InvalidContainerElement",
      "error_message": "The provided container element is not a valid HTMLElement",
      "recovery_action": "Throw a TypeError to signal incorrect usage"
    },
    {
      "error_type": "DrawflowInitializationError",
      "error_message": "Failed to import or initialize Drawflow editor",
      "recovery_action": "Log the error for debugging and rethrow or return null"
    }
  ],
  "dependency_integration_considerations": [
    "Ensure the 'drawflow' NPM package is installed and matches the expected version",
    "Import Drawflow using ES module syntax: import Drawflow from 'drawflow'",
    "Verify that containerEl is attached to the DOM before calling createCanvas",
    "No additional adapter layers: use Drawflow API directly"
  ]
}